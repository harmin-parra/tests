plugins {
    id "net.serenity-bdd.serenity-gradle-plugin" version "4.2.34"
    id 'java'
}

defaultTasks 'clean', 'test', 'aggregate'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    serenityVersion = '4.2.34'
    junitVersion = '5.13.4'
}

dependencies {
    implementation "net.serenity-bdd:serenity-core:${serenityVersion}",
            "net.serenity-bdd:serenity-junit5:${serenityVersion}",
            "net.serenity-bdd:serenity-screenplay:${serenityVersion}",
            "net.serenity-bdd:serenity-screenplay-webdriver:${serenityVersion}",
            "net.serenity-bdd:serenity-ensure:${serenityVersion}",
            "net.serenity-bdd:serenity-rest-assured:${serenityVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}",
        "ch.qos.logback:logback-classic:1.5.18"
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = "full"  // shows stack traces
        showCauses = true
        showExceptions = true
        showStackTraces = true
    }    
}

gradle.startParameter.continueOnFailure = true

serenity {
    reports = ["single-page-html"]
    testRoot = "demo"
}

test.finalizedBy(aggregate)

//tasks.register('aggregateReports', net.serenitybdd.gradle.plugins.SerenityReportsTask) {
//    dependsOn test
//    doFirst {
//        println "Generating Serenity reports..."
//    }
//}
